<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <groupId>org.jboss.weld</groupId>
    <artifactId>weld-core-jboss-as7-updater</artifactId>
    <packaging>pom</packaging>

    <parent>
        <groupId>org.jboss.weld</groupId>
        <artifactId>weld-core-parent</artifactId>
        <version>6.0.2-SNAPSHOT</version>
        <relativePath>../pom.xml</relativePath>
    </parent>

    <name>JBoss AS7 Updater</name>

    <!-- Minimal metadata -->
    <description>A script to update Weld in JBoss AS7/WildFly</description>

    <licenses>
        <license>
            <name>Apache License, Version 2.0</name>
            <distribution>repo</distribution>
            <url>http://www.apache.org/licenses/LICENSE-2.0.html</url>
        </license>
    </licenses>
    <url>http://weld.cdi-spec.org</url>


    <properties>
        <!-- We have to explicitly state the project version. We cannot use ${project.version}
        as the release plugin won't deal with double evaluation -->
        <weld.update.version>6.0.2-SNAPSHOT</weld.update.version>
        <!-- These are *NOT* automatically updated and should be reviewed if the relevant profile is to be used -->
        <cdi.update.version>4.1.0</cdi.update.version>
        <interceptors.update.version>2.2.0</interceptors.update.version>
    </properties>

    <dependencies>
        <dependency>
            <groupId>org.jboss.weld</groupId>
            <artifactId>weld-core-impl</artifactId>
            <version>${weld.update.version}</version>
        </dependency>
        <dependency>
            <groupId>org.jboss.weld</groupId>
            <artifactId>weld-lite-extension-translator</artifactId>
            <version>${weld.update.version}</version>
        </dependency>
        <dependency>
            <groupId>org.jboss.weld.module</groupId>
            <artifactId>weld-ejb</artifactId>
            <version>${weld.update.version}</version>
        </dependency>
        <dependency>
            <groupId>org.jboss.weld.module</groupId>
            <artifactId>weld-jsf</artifactId>
            <version>${weld.update.version}</version>
        </dependency>
        <dependency>
            <groupId>org.jboss.weld.module</groupId>
            <artifactId>weld-jta</artifactId>
            <version>${weld.update.version}</version>
        </dependency>
        <dependency>
            <groupId>org.jboss.weld.module</groupId>
            <artifactId>weld-web</artifactId>
            <version>${weld.update.version}</version>
        </dependency>
        <dependency>
            <groupId>jakarta.enterprise</groupId>
            <artifactId>cdi-tck-ext-lib</artifactId>
            <version>${cdi.tck-4-1.version}</version>
        </dependency>
        <dependency>
            <groupId>jakarta.enterprise</groupId>
            <artifactId>jakarta.enterprise.cdi-api</artifactId>
            <version>${cdi.update.version}</version>
        </dependency>
        <dependency>
            <groupId>jakarta.enterprise</groupId>
            <artifactId>jakarta.enterprise.cdi-el-api</artifactId>
            <version>${cdi.update.version}</version>
        </dependency>
        <dependency>
            <groupId>jakarta.enterprise</groupId>
            <artifactId>jakarta.enterprise.lang-model</artifactId>
            <version>${cdi.update.version}</version>
        </dependency>
        <dependency>
            <groupId>jakarta.interceptor</groupId>
            <artifactId>jakarta.interceptor-api</artifactId>
            <version>${interceptors.update.version}</version>
        </dependency>
    </dependencies>
    <profiles>
        <profile>
            <id>update-jboss-as</id>
            <build>
                <defaultGoal>package</defaultGoal>
                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-antrun-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>update-jboss-as</id>
                                <phase>package</phase>
                                <goals>
                                    <goal>run</goal>
                                </goals>
                                <configuration>
                                    <target>
                                        <property file="${basedir}/local.build.properties" />
                                        <property file="${basedir}/build.properties" />
                                        <property name="jboss.home" value="${env.JBOSS_HOME}" />

                                        <echo>

                                            =========================================================================

                                            Updating Weld modules

                                            Weld version: ${weld.update.version}

                                            JBOSS_HOME: ${jboss.home}

                                            =========================================================================

                                        </echo>

                                        <available file="${jboss.home}/modules/system" property="module.dir" value="${jboss.home}/modules/system/layers/base/org/jboss/weld" />
                                        <!-- The older versions of JBoss AS used
                                        this location for modules -->
                                        <property name="module.dir" value="${jboss.home}/modules/org/jboss/weld" />
                                        <property name="jsf.injection.dir" value="${module.dir}/../as/jsf-injection/main" />

                                        <property name="weld.core.file" value="weld-core-impl-${weld.update.version}.jar" />
                                        <property name="weld.ejb.file" value="weld-ejb-${weld.update.version}.jar" />
                                        <property name="weld.jsf.file" value="weld-jsf-${weld.update.version}.jar" />
                                        <property name="weld.jta.file" value="weld-jta-${weld.update.version}.jar" />
                                        <property name="weld.web.file" value="weld-web-${weld.update.version}.jar" />
                                        <property name="weld.ejb.file" value="weld-ejb-${weld.update.version}.jar" />
                                        <property name="weld.lite-extension.file" value="weld-lite-extension-translator-${weld.update.version}.jar" />

                                        <delete>
                                            <fileset dir="${module.dir}/core/main" includes="*.jar" />
                                            <fileset dir="${module.dir}/spi/main" includes="*.jar" />
                                            <fileset dir="${module.dir}/api/main" includes="*.jar" />
                                            <fileset dir="${jsf.injection.dir}" includes="weld-*jsf*.jar" />
                                            <fileset dir="${module.dir}/core/main" includes="*.index" />
                                            <fileset dir="${module.dir}/spi/main" includes="*.index" />
                                            <fileset dir="${module.dir}/api/main" includes="*.index" />
                                            <fileset dir="${jsf.injection.dir}" includes="weld-*jsf*.index" />
                                        </delete>

                                        <copy todir="${module.dir}/core/main" overwrite="true">
                                            <fileset dir="target/dependency/lib">
                                                <include name="${weld.core.file}" />
                                                <include name="${weld.ejb.file}" />
                                                <include name="${weld.jta.file}" />
                                                <include name="${weld.web.file}" />
                                                <include name="${weld.ejb.file}" />
                                                <include name="${weld.lite-extension.file}" />
                                            </fileset>
                                        </copy>


                                        <replaceregexp file="${module.dir}/core/main/module.xml" match="path=&quot;weld-core-impl.*?&quot;" replace="path=&quot;${weld.core.file}&quot;" byline="true" />
                                        <replaceregexp file="${module.dir}/core/main/module.xml" match="path=&quot;weld-ejb.*?&quot;" replace="path=&quot;${weld.ejb.file}&quot;" byline="true" />
                                        <replaceregexp file="${module.dir}/core/main/module.xml" match="path=&quot;weld-jta.*?&quot;" replace="path=&quot;${weld.jta.file}&quot;" byline="true" />
                                        <replaceregexp file="${module.dir}/core/main/module.xml" match="path=&quot;weld-web.*?&quot;" replace="path=&quot;${weld.web.file}&quot;" byline="true" />
                                        <replaceregexp file="${module.dir}/core/main/module.xml" match="path=&quot;weld-lite-extension-translator.*?&quot;" replace="path=&quot;${weld.lite-extension.file}&quot;" byline="true" />

                                        <copy todir="${module.dir}/spi/main" overwrite="true">
                                            <fileset dir="target/dependency/lib">
                                                <include name="weld-spi-${weld.api.version}.jar" />
                                            </fileset>
                                        </copy>

                                        <replaceregexp file="${module.dir}/spi/main/module.xml" match="path=&quot;.*?&quot;" replace="path=&quot;weld-spi-${weld.api.version}.jar&quot;" byline="true" />

                                        <copy todir="${module.dir}/api/main" overwrite="true">
                                            <fileset dir="target/dependency/lib">
                                                <include name="weld-api-${weld.api.version}.jar" />
                                            </fileset>
                                        </copy>

                                        <replaceregexp file="${module.dir}/api/main/module.xml" match="path=&quot;.*?&quot;" replace="path=&quot;weld-api-${weld.api.version}.jar&quot;" byline="true" />

                                        <copy todir="${jsf.injection.dir}" overwrite="true">
                                            <fileset dir="target/dependency/lib">
                                                <include name="${weld.jsf.file}" />
                                            </fileset>
                                        </copy>

                                        <replaceregexp file="${jsf.injection.dir}/module.xml" match="path=&quot;weld-jsf.*?&quot;" replace="path=&quot;weld-jsf-${weld.update.version}.jar&quot;" byline="true" />
                                        <replaceregexp file="${jsf.injection.dir}/module.xml" match="path=&quot;weld-core-jsf.*?&quot;" replace="path=&quot;weld-jsf-${weld.update.version}.jar&quot;" byline="true" />

                                        <echo>

                                            =========================================================================

                                            Copying standalone-activemq-embedded.xml

                                            =========================================================================

                                        </echo>

                                        <copy todir="${jboss.home}/standalone/configuration" overwrite="true">
                                            <fileset dir="${jboss.home}/docs//examples/configs">
                                                <include name="standalone-activemq-embedded.xml" />
                                            </fileset>
                                        </copy>
                                    </target>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-deploy-plugin</artifactId>
                        <configuration>
                            <skip>true</skip>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <profile>
            <id>install-cdi-tck-ext-lib</id>
            <activation>
                <property>
                    <name>tck</name>
                </property>
            </activation>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-antrun-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>install-cdi-tck-ext-lib</id>
                                <phase>package</phase>
                                <goals>
                                    <goal>run</goal>
                                </goals>
                                <configuration>
                                    <target>
                                        <copy todir="${env.JBOSS_HOME}/standalone/lib/ext" overwrite="true">
                                            <fileset dir="target/dependency/lib">
                                                <include name="cdi-tck-ext-lib-${cdi.tck-4-1.version}.jar" />
                                            </fileset>
                                        </copy>
                                    </target>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>

    <build>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-dependency-plugin</artifactId>
                <executions>
                    <execution>
                        <id>copy-dependencies</id>
                        <phase>process-resources</phase>
                        <goals>
                            <goal>copy-dependencies</goal>
                        </goals>
                        <configuration>
                            <outputDirectory>${project.build.directory}/dependency/lib</outputDirectory>
                            <overWriteSnapshots>true</overWriteSnapshots>
                            <includeArtifactIds>jakarta.enterprise.cdi-api,jakarta.enterprise.cdi-el-api,jakarta.enterprise.lang-model,jakarta.interceptor-api,weld-api,weld-core-impl,weld-lite-extension-translator,weld-jsf,weld-ejb,weld-jta,weld-web,weld-spi,cdi-tck-ext-lib</includeArtifactIds>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>

</project>
