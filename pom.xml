<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <artifactId>weld-core-parent</artifactId>
    <packaging>pom</packaging>
    <version>6.0.0-SNAPSHOT</version>

    <name>Weld Parent</name>

    <parent>
        <groupId>org.jboss.weld</groupId>
        <artifactId>weld-parent</artifactId>
        <version>53</version>
    </parent>


    <!-- Minimal metadata -->
    <description>The build aggregator for Weld, which takes care of calling the modules which make up Weld</description>


    <properties>
        <maven.build.timestamp.format>yyyy-MM-dd HH:mm</maven.build.timestamp.format>

        <maven.compiler.source>17</maven.compiler.source>
        <maven.compiler.target>17</maven.compiler.target>

        <!-- Should be equal to the newest Java version for which sources exist -->
        <jdk.min.version>11</jdk.min.version>

        <build.timestamp>${maven.build.timestamp}</build.timestamp>
        <!-- Travis CI build workaround -->
        <travis.surefire.argLine>-Xmx1024m</travis.surefire.argLine>

        <!-- Only initialized in JDK 9 profile to provide extra CMD args to surefire -->
        <surefire.plugin.jdk17.args />
        <!-- Jakarta JAX/JWS api and implementation -->
        <jax.api.version>4.0.2</jax.api.version>
        <jws.api.version>3.0.0</jws.api.version>
        <jax.artifacts.version>4.0.3</jax.artifacts.version>

        <!-- A property which is handed over to WFLY container through Arquillian, allows to pass on JVM options -->
        <additional.vm.args />
        <!-- A property which is handed over to WFLY container through Arquillian, allows to configure server-specific options -->
        <additional.jboss.args />

        <manifest.specification.title>Jakarta EE 10 Contexts and Dependency Injection for Java</manifest.specification.title>
        <manifest.specification.version>2.0</manifest.specification.version>

        <!-- Dependency versions. KEEP IN ALPHABETICAL ORDER -->
        <apache.bcel.version>6.10.0</apache.bcel.version>
        <arquillian.version>1.9.1.Final</arquillian.version>
        <arquillian.jakarta.version>10.0.0.Final</arquillian.jakarta.version>
        <arquillian.drone.version>3.0.0-alpha.5</arquillian.drone.version>
        <arquillian.graphene.version>3.0.0-alpha.3</arquillian.graphene.version>
        <arquillian.weld.version>4.0.0.Final</arquillian.weld.version>
        <arquillian.se.container.version>1.0.2.Final</arquillian.se.container.version>
        <arquillian.tomcat.version>1.2.1.Final</arquillian.tomcat.version>
        <atinject.tck.version>2.0.1</atinject.tck.version>
        <!-- Version of the CDI 4.x release TCK -->
        <cdi.tck-4-1.version>4.1.0</cdi.tck-4-1.version>
        <!-- By default, each mvn profile uses corresponding file from TCK repo, see jboss-tck-runner/pom.xml -->
        <!-- We can also use our own file, needed for relaxed mode testing (see WeldMethodInterceptor) -->
        <!-- Our variant is under src/test/tck/tck-tests.xml -->
        <cdi.tck.suite.xml.file />
        <classfilewriter.version>1.3.1.Final</classfilewriter.version>
        <groovy.version>3.0.22</groovy.version>
        <htmlunit.version>2.70.0</htmlunit.version>
        <jacoco.version>0.8.12</jacoco.version>
        <jandex.version>3.2.1</jandex.version>
        <jakarta.activation.version>2.1.3</jakarta.activation.version>
        <jakarta.el.version>6.0.1</jakarta.el.version>
        <glassfish.jakarta.el.version>5.0.0-M1</glassfish.jakarta.el.version>
        <jakarta.jms.api.version>3.1.0</jakarta.jms.api.version>
        <jsf.api.version>4.1.1</jsf.api.version>
        <jboss.logging.version>3.6.0.Final</jboss.logging.version>
        <jboss.logging.processor.version>3.0.1.Final</jboss.logging.processor.version>
        <jboss.logmanager.version>3.0.6.Final</jboss.logmanager.version>
        <jsf.impl.version>4.1.1</jsf.impl.version>
        <jsp.api.version>4.0.0</jsp.api.version>
        <jstl.api.version>3.0.0</jstl.api.version>
        <junit.version>4.13.2</junit.version>
        <log4j.version>1.2.17</log4j.version>
        <shrinkwrap.version>1.2.6</shrinkwrap.version>
        <shrinkwrap.resolver.version>3.3.0</shrinkwrap.resolver.version>
        <spotbugs-maven-plugin.version>4.8.6.1</spotbugs-maven-plugin.version>
        <spotbugs-annotations-version>4.8.6</spotbugs-annotations-version>
        <testng.version>7.9.0</testng.version>
        <weld.api.version>6.0.Beta5</weld.api.version>
        <weld.logging.tools.version>1.0.3.Final</weld.logging.tools.version>
        <wildfly.arquillian.version>5.0.1.Final</wildfly.arquillian.version>
    </properties>

    <modules>
        <module>impl</module>
        <module>weld-lite-extension-translator</module>
        <module>modules/ejb</module>
        <module>modules/jsf</module>
        <module>modules/jta</module>
        <module>modules/web</module>
        <module>bom</module>
    </modules>

    <!-- Dependency management. KEEP IN ALPHABETICAL ORDER -->
    <dependencyManagement>

        <dependencies>
            <!--Optional BCEL classes dependency-->
            <dependency>
                <groupId>org.apache.bcel</groupId>
                <artifactId>bcel</artifactId>
                <version>${apache.bcel.version}</version>
                <optional>true</optional>
            </dependency>

            <dependency>
                <groupId>org.codehaus.groovy</groupId>
                <artifactId>groovy-all</artifactId>
                <version>${groovy.version}</version>
                <type>pom</type>
            </dependency>

            <dependency>
                <groupId>jakarta.activation</groupId>
                <artifactId>jakarta.activation-api</artifactId>
                <version>${jakarta.activation.version}</version>
            </dependency>

            <dependency>
                <groupId>jakarta.el</groupId>
                <artifactId>jakarta.el-api</artifactId>
                <version>${jakarta.el.version}</version>
            </dependency>

            <!-- This artifact bundles EL API -->
            <dependency>
                <groupId>org.glassfish</groupId>
                <artifactId>jakarta.el</artifactId>
                <version>${glassfish.jakarta.el.version}</version>
            </dependency>

            <dependency>
                <groupId>jakarta.faces</groupId>
                <artifactId>jakarta.faces-api</artifactId>
                <version>${jsf.api.version}</version>
            </dependency>

            <dependency>
                <groupId>jakarta.jms</groupId>
                <artifactId>jakarta.jms-api</artifactId>
                <version>${jakarta.jms.api.version}</version>
            </dependency>

            <dependency>
                <groupId>jakarta.jws</groupId>
                <artifactId>jakarta.jws-api</artifactId>
                <version>${jws.api.version}</version>
            </dependency>
            <dependency>
                <groupId>jakarta.xml.ws</groupId>
                <artifactId>jakarta.xml.ws-api</artifactId>
                <version>${jax.api.version}</version>
            </dependency>

            <dependency>
                <groupId>org.jboss.logging</groupId>
                <artifactId>jboss-logging-processor</artifactId>
                <version>${jboss.logging.processor.version}</version>
            </dependency>

            <dependency>
                <groupId>org.jboss.logging</groupId>
                <artifactId>jboss-logging</artifactId>
                <version>${jboss.logging.version}</version>
            </dependency>

            <dependency>
                <groupId>org.jboss.logmanager</groupId>
                <artifactId>jboss-logmanager</artifactId>
                <version>${jboss.logmanager.version}</version>
                <scope>test</scope>
            </dependency>

            <dependency>
                <groupId>junit</groupId>
                <artifactId>junit</artifactId>
                <version>${junit.version}</version>
            </dependency>

            <dependency>
                <groupId>net.sourceforge.htmlunit</groupId>
                <artifactId>htmlunit</artifactId>
                <version>${htmlunit.version}</version>
            </dependency>

            <dependency>
                <groupId>jakarta.inject</groupId>
                <artifactId>jakarta.inject-tck</artifactId>
                <version>${atinject.tck.version}</version>
            </dependency>

            <dependency>
                <groupId>org.jboss.classfilewriter</groupId>
                <artifactId>jboss-classfilewriter</artifactId>
                <version>${classfilewriter.version}</version>
            </dependency>

            <!--Keep Arq. BOMs as first of all Arquillian dependencies in order to make it fetch correct versions!-->
            <!--Arquillian, Jakarta parts (enrichers etc) operating with jakarta packages -->
            <dependency>
                <groupId>org.jboss.arquillian.jakarta</groupId>
                <artifactId>arquillian-jakarta-bom</artifactId>
                <version>${arquillian.jakarta.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>

            <!--Arquillian, all other parts, APIs, containers, ... -->
            <dependency>
                <groupId>org.jboss.arquillian</groupId>
                <artifactId>arquillian-bom</artifactId>
                <version>${arquillian.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>

            <dependency>
                <groupId>org.jboss.shrinkwrap</groupId>
                <artifactId>shrinkwrap-bom</artifactId>
                <version>${shrinkwrap.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>

            <dependency>
                <groupId>org.jboss.arquillian.container</groupId>
                <artifactId>arquillian-weld-embedded</artifactId>
                <version>${arquillian.weld.version}</version>
            </dependency>

            <dependency>
                <groupId>org.jboss.arquillian.container</groupId>
                <artifactId>arquillian-tomcat-embedded-10</artifactId>
                <version>${arquillian.tomcat.version}</version>
            </dependency>

            <dependency>
                <groupId>org.jboss.arquillian.container</groupId>
                <artifactId>container-se-managed</artifactId>
                <version>${arquillian.se.container.version}</version>
            </dependency>
            <!-- WildFly -->
            <dependency>
                <groupId>org.wildfly.arquillian</groupId>
                <artifactId>wildfly-arquillian-container-managed</artifactId>
                <version>${wildfly.arquillian.version}</version>
            </dependency>
            <dependency>
                <groupId>org.wildfly.arquillian</groupId>
                <artifactId>wildfly-arquillian-container-remote</artifactId>
                <version>${wildfly.arquillian.version}</version>
            </dependency>
            <dependency>
                <groupId>org.wildfly.arquillian</groupId>
                <artifactId>wildfly-arquillian-protocol-jmx</artifactId>
                <version>${wildfly.arquillian.version}</version>
            </dependency>
            <dependency>
                <groupId>org.wildfly.arquillian</groupId>
                <artifactId>wildfly-arquillian-common</artifactId>
                <version>${wildfly.arquillian.version}</version>
                <exclusions>
                    <exclusion>
                        <groupId>org.jboss.logmanager</groupId>
                        <artifactId>log4j-jboss-logmanager</artifactId>
                    </exclusion>
                    <exclusion>
                        <groupId>org.slf4j</groupId>
                        <artifactId>slf4j-api</artifactId>
                    </exclusion>
                    </exclusions>
                <scope>test</scope>
            </dependency>

            <dependency>
                <groupId>org.jboss.weld</groupId>
                <artifactId>weld-api-bom</artifactId>
                <version>${weld.api.version}</version>
                <scope>import</scope>
                <type>pom</type>
            </dependency>

            <!-- Import managed dependencies from API parent -->
            <dependency>
                <groupId>org.jboss.weld</groupId>
                <artifactId>weld-api-parent</artifactId>
                <version>${weld.api.version}</version>
                <scope>import</scope>
                <type>pom</type>
            </dependency>

            <dependency>
                <groupId>org.jboss.weld</groupId>
                <artifactId>weld-core-impl</artifactId>
                <version>${project.version}</version>
            </dependency>

            <dependency>
                <groupId>org.jboss.weld</groupId>
                <artifactId>weld-lite-extension-translator</artifactId>
                <version>${project.version}</version>
            </dependency>

            <dependency>
                <groupId>org.jboss.weld.module</groupId>
                <artifactId>weld-jsf</artifactId>
                <version>${project.version}</version>
            </dependency>

            <dependency>
                <groupId>org.jboss.weld.module</groupId>
                <artifactId>weld-jta</artifactId>
                <version>${project.version}</version>
            </dependency>

            <dependency>
                <groupId>org.jboss.weld.module</groupId>
                <artifactId>weld-web</artifactId>
                <version>${project.version}</version>
            </dependency>

            <dependency>
                <groupId>org.jboss.weld.module</groupId>
                <artifactId>weld-ejb</artifactId>
                <version>${project.version}</version>
            </dependency>

            <dependency>
                <groupId>org.jboss.weld</groupId>
                <artifactId>weld-core-test-common</artifactId>
                <version>${project.version}</version>
            </dependency>

            <dependency>
                <groupId>org.jboss.weld</groupId>
                <artifactId>weld-core-test</artifactId>
                <version>${project.version}</version>
            </dependency>

            <dependency>
                <groupId>org.jboss.weld</groupId>
                <artifactId>weld-porting-package-tck</artifactId>
                <version>${project.version}</version>
            </dependency>

            <dependency>
                <groupId>org.jboss.weld.environment</groupId>
                <artifactId>weld-environment-common</artifactId>
                <version>${project.version}</version>
            </dependency>

            <dependency>
                <groupId>org.jboss.weld.servlet</groupId>
                <artifactId>weld-servlet-shaded</artifactId>
                <version>${project.version}</version>
            </dependency>

            <dependency>
                <groupId>org.jboss.weld.servlet</groupId>
                <artifactId>weld-servlet-core</artifactId>
                <version>${project.version}</version>
            </dependency>

            <dependency>
                <groupId>org.jboss.weld.se</groupId>
                <artifactId>weld-se-shaded</artifactId>
                <version>${project.version}</version>
            </dependency>

            <dependency>
                <groupId>org.jboss.weld.se</groupId>
                <artifactId>weld-se-core</artifactId>
                <version>${project.version}</version>
            </dependency>

            <dependency>
                <groupId>org.jboss.shrinkwrap.resolver</groupId>
                <artifactId>shrinkwrap-resolver-impl-maven</artifactId>
                <version>${shrinkwrap.resolver.version}</version>
            </dependency>

            <dependency>
                <groupId>org.jboss.shrinkwrap.resolver</groupId>
                <artifactId>shrinkwrap-resolver-spi</artifactId>
                <version>${shrinkwrap.resolver.version}</version>
            </dependency>

            <dependency>
                <groupId>org.testng</groupId>
                <artifactId>testng</artifactId>
                <version>${testng.version}</version>
            </dependency>

            <dependency>
                <groupId>jakarta.servlet.jsp.jstl</groupId>
                <artifactId>jakarta.servlet.jsp.jstl-api</artifactId>
                <version>${jstl.api.version}</version>
            </dependency>

            <dependency>
                <groupId>jakarta.servlet.jsp</groupId>
                <artifactId>jakarta.servlet.jsp-api</artifactId>
                <version>${jsp.api.version}</version>
            </dependency>

            <dependency>
                <groupId>log4j</groupId>
                <artifactId>log4j</artifactId>
                <version>${log4j.version}</version>
            </dependency>

            <dependency>
                <groupId>io.smallrye</groupId>
                <artifactId>jandex</artifactId>
                <version>${jandex.version}</version>
            </dependency>


            <dependency>
                <groupId>org.glassfish</groupId>
                <artifactId>jakarta.faces</artifactId>
                <version>${jsf.impl.version}</version>
            </dependency>

            <!-- spotbugs annotations -->
            <dependency>
                <groupId>com.github.spotbugs</groupId>
                <artifactId>spotbugs-annotations</artifactId>
                <version>${spotbugs-annotations-version}</version>
                <optional>true</optional>
            </dependency>
        </dependencies>

    </dependencyManagement>

    <build>
        <pluginManagement>
            <plugins>
                <plugin>
                    <groupId>org.codehaus.cargo</groupId>
                    <artifactId>cargo-maven2-plugin</artifactId>
                    <version>${cargo.maven2.plugin.version}</version>
                </plugin>
                <plugin>
                    <groupId>com.github.spotbugs</groupId>
                    <artifactId>spotbugs-maven-plugin</artifactId>
                    <version>${spotbugs-maven-plugin.version}</version>
                </plugin>
                <plugin>
                    <groupId>org.jacoco</groupId>
                    <artifactId>jacoco-maven-plugin</artifactId>
                    <version>${jacoco.version}</version>
                </plugin>
            </plugins>

        </pluginManagement>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <configuration>
                    <compilerArgs>
                        <arg>-Aorg.jboss.logging.tools.addGeneratedAnnotation=false</arg>
                    </compilerArgs>
                </configuration>
            </plugin>
        </plugins>
    </build>


    <!-- SCM and distribution management -->
    <scm>
        <connection>scm:git:git@github.com:weld/core.git</connection>
        <developerConnection>scm:git:git@github.com:weld/core.git</developerConnection>
        <url>scm:git:git@github.com:weld/core.git</url>
        <tag>HEAD</tag>
    </scm>


    <profiles>
        <profile>
            <id>update-jboss-as</id>
            <activation>
                <property>
                    <name>release</name>
                </property>
            </activation>
            <modules>
                <module>jboss-as</module>
            </modules>
        </profile>
        <profile>
            <id>tests</id>
            <activation>
                <property>
                    <name>weld.default.build</name>
                    <value>!false</value>
                </property>
            </activation>
            <modules>
                <module>porting-package</module>
                <module>tests-common</module>
                <module>tests</module>
                <module>lang-model-tck</module>
                <module>tests-arquillian</module>
                <module>inject-tck-runner</module>
            </modules>
        </profile>
        <profile>
            <id>tck</id>
            <activation>
                <property>
                        <name>weld.default.build.cditck</name>
                    <value>!false</value>
                </property>
            </activation>
            <modules>
                <module>jboss-tck-runner</module>
            </modules>
        </profile>
        <profile>
            <id>examples</id>
            <activation>
                <property>
                    <name>release</name>
                </property>
            </activation>
            <modules>
                <module>examples</module>
            </modules>
        </profile>
        <profile>
            <id>docs</id>
            <activation>
                <property>
                    <name>release</name>
                </property>
            </activation>
            <modules>
                <module>docs/reference</module>
            </modules>
        </profile>
        <profile>
            <id>bom</id>
            <activation>
                <property>
                    <name>release</name>
                </property>
            </activation>
            <modules>
                <module>bom</module>
            </modules>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-antrun-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>bom-verify-weld-api</id>
                                <phase>package</phase>
                                <goals>
                                    <goal>run</goal>
                                </goals>
                                <configuration>
                                    <target>
                                        <property name="weld.api.search.string" value="&lt;weld.api.bom.version&gt;${weld.api.version}&lt;/weld.api.bom.version&gt;" />
                                        <property name="bom.pom.file.path" value="bom${file.separator}pom.xml" />
                                        <echo message="Verify Weld API used in ${bom.pom.file.path} matches ${weld.api.version}" />
                                        <fail message="Invalid Weld API version used in BOM pom.xml">
                                            <condition>
                                                <not>
                                                    <resourcecontains resource="${bom.pom.file.path}" substring="${weld.api.search.string}" />
                                                </not>
                                            </condition>
                                        </fail>
                                    </target>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <profile>
            <id>environments</id>
            <activation>
                <property>
                    <name>weld.default.build</name>
                    <value>!false</value>
                </property>
            </activation>
            <modules>
                <module>environments/common</module>
                <module>environments/se</module>
                <module>environments/servlet</module>
            </modules>
        </profile>
        <profile>
            <id>bundles</id>
            <activation>
                <property>
                    <name>release</name>
                </property>
            </activation>
            <modules>
                <module>bundles/osgi</module>
            </modules>
        </profile>
        <profile>
            <!-- NOTE: groovy compilation must be disabled if using this profile -->
            <id>log-msg-idx</id>
            <activation>
                <activeByDefault>false</activeByDefault>
                <property>
                    <name>log-msg-idx</name>
                </property>
            </activation>
            <dependencies>
                <dependency>
                    <groupId>org.jboss.weld</groupId>
                    <artifactId>weld-logging-tools</artifactId>
                    <version>${weld.logging.tools.version}</version>
                </dependency>
            </dependencies>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-compiler-plugin</artifactId>
                        <configuration>
                            <!-- We have to specify the processors to skip org.jboss.logging.processor.apt.LoggingToolsProcessor -->
                            <annotationProcessors>
                                <annotationProcessor>org.jboss.weld.logging.LogMessageIndexGenerator</annotationProcessor>
                            </annotationProcessors>
                            <compilerArguments>
                                <AprojectVersion>${project.version}</AprojectVersion>
                                <Aartifact>${project.groupId}:${project.artifactId}</Aartifact>
                            </compilerArguments>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <profile>
            <id>windows</id>
            <!-- Following profile is automatically triggered in Windows environment and allows to handle behaviour/problems
            specific for this OS. For instance excluding a test here will skip its execution on Windows. -->
            <activation>
                <os>
                    <family>Windows</family>
                </os>
            </activation>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-surefire-plugin</artifactId>
                        <configuration>
                            <excludes>
                                <exclude>**/ShutdownHookTest.java</exclude>
                            </excludes>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <profile>
            <!-- Auto-activated profile for JDK 17 or newer -->
            <id>jdk17+</id>
            <activation>
                <jdk>[17,)</jdk>
            </activation>
            <properties>
                <surefire.plugin.jdk17.args>
                    --add-exports=java.desktop/sun.awt=ALL-UNNAMED
                    --add-opens=java.base/java.io=ALL-UNNAMED
                    --add-opens=java.base/java.lang=ALL-UNNAMED
                    --add-opens=java.base/java.lang.invoke=ALL-UNNAMED
                    --add-opens=java.base/java.security=ALL-UNNAMED
                    --add-opens=java.base/java.util=ALL-UNNAMED
                    --add-opens=java.management/javax.management=ALL-UNNAMED
                    --add-opens=java.naming/javax.naming=ALL-UNNAMED
                </surefire.plugin.jdk17.args>
            </properties>
        </profile>
    </profiles>
</project>
